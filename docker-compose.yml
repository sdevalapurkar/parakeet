version: '3.9'

services:
  api:
    build: ./api
    ports:
      - '5000:5000'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PORT=${PORT}
      - API_SECRET=${API_SECRET}

  app:
    build: ./app
    ports:
      - '3000:3000'
    environment:
      - REACT_APP_SECRET=${API_SECRET}
      - REACT_APP_API_HOST=${API_HOST}
      - REACT_APP_API_PORT=${API_PORT}

  db:
    image: 'postgres'
    ports:
      - 5434:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5432"]
      interval: 30s
      timeout: 10s
      retries: 5

  db-setup:
    build:
      context: ./db
      dockerfile: Dockerfile.setup
    container_name: db-setup
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    volumes:
      - /opt/app-root/src/node_modules
    restart: on-failure
    depends_on:
      - db
    links:
      - db

volumes:
  data:
